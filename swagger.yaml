openapi: 3.0.0
info:
  title: Learn express and swagger -LearnCodeOnline
  description: LCO - a course segment about writing docs
  version: 1.1.0
  contact:
    email: sp647600@gmail.com
    url: "https://saurabh-pande.netlify.com"

# servers:
#   - url: "https://localhost:8000/api/v1"
#     description: for local host -secure
#   - url: "http://localhost:8000/api/v1"
#     description: for local host -regular

servers:
  - url: "{protocol}://localhost:8000/api/{version}"
    description: for local host -secure
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer
paths:
  /lco:
    get:
      tags:
        - String
      summary: return a greet message from LCO
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: Bad request
        500:
          description: internal server error

  /lcoobject:
    get:
      tags:
        - Object
      summary: return a unique course from LCO
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number

        400:
          description: Bad request
        500:
          description: internal server error

  /courses:
    get:
      tags:
        - Array
      summary: return a all courses from LCO
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number

        400:
          description: Bad request
        500:
          description: internal server error

  /mycourse{courseId}:
    get:
      tags:
        - Array
      summary: return a all courses from LCO
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema:
            type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number

        400:
          description: Bad request
        500:
          description: internal server error
  
  /addCourse:
    post:
      tags:
        - string
      summary: adds a new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json  
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: boolean
              
        400:
          description: Bad request
        500:
          description: internal server error
  
  /coursequery:
    get:
      tags:
        - string
      summary: trying to learn about query while searching
      parameters:
       - name: location
         in: query
         required: true
         schema:
           type: string
           enum: [delhi,nagpur,pune]
       - name: device
         in: query
         required: true
         schema:
           type: string
           enum: [iphone,mi,samsung]
       - name: size
         in: query
         required: true
         schema:
           type: string
           enum: [small,meadium,large]

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
                  size:
                    type: string  
              
        400:
          description: Bad request
        500:
          description: internal server error

  /courseupload:
    post:
      tags:
        - string
      summary: uploding course Images
      parameters:
        - in: header
          name: auth
      requestBody:
        content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
      responses:
        200:
          description: All good success     
        400:
          description: Bad request
        500:
          description: internal server error

      # ðŸ‘†ðŸ‘† Images are always go through body that's why we called multi part body
      # ðŸ‘†ðŸ‘† the content am sending you is not application/json rather it's a part of multipart/form-data that's you'r gonna see lot of react & angular send data through form instead of send through states they create a form data you can't send Images via json you can send the Images path but its complex rather choose this one.


